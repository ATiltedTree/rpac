name: Main

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
          profile: minimal
      - name: Build | Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
  super_lint:
    name: Super Lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - name: Build | Check
        uses: github/super-linter@v2.0.0
        env:
          VALIDATE_JAVASCRIPT_STANDARD: false
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - name: Setup | Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
          profile: minimal
      - name: Build | Check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  compile:
    name: Compile
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - name: Setup | Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
      - name: Build | Check
        uses: actions-rs/cargo@v1
        with:
          command: check
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: [compile]
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
        rust:
          - stable
          - nightly
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - name: Setup | Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup | Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
      - name: Build | Check
        uses: actions-rs/cargo@v1
        with:
          command: test
